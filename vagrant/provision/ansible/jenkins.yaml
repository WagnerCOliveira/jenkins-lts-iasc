---
- hosts: all
  become: yes
  become_user: root
  become_method: sudo
  vars:
    pkg_pre_requisitos:
      - apt-transport-https 
      - ca-certificates 
      - curl 
      - gpg
      - gnupg2 
      - software-properties-common
      - python3-full
      - virtualenv
      - python3-docker
      - pipx

    pkg_remove_docker:
      - docker.io 
      - docker-doc 
      - docker-compose 
      - podman-docker 
      - containerd 
      - runc
    
    pkg_install_docker:
      - containerd 
      - docker             
      - docker-compose

  tasks:
    - name: Adicionar mapeamentos para /etc/hosts
      blockinfile:
        path: /etc/hosts
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        block: |
          192.168.56.100  master.millennium.falcon master
          192.168.56.101  node1.millennium.falcon node1
          192.168.56.102  node2.millennium.falcon node2
          192.168.56.103  registry.millennium.falcon registry
          192.168.56.104  jenkins.millennium.falcon jenkins
          192.168.56.105  gitlab.millennium.falcon gitlab        

    - name: Criando os arquivos
      copy:
        src: files/jenkins/{{ item }}
        dest: /opt
        mode: 0644    
      loop:
      - docker-compose.yaml
      - .env
      - Dockerfile
      - jenkins.yaml
      - plugins.txt

    - name: Update de todos oa pacotes do Sistema Debian 12
      apt:
        name: "*"
        state: latest

    - name: Removendo pacotes conflitantes
      apt:
        name: "{{ pkg_remove_docker }}"
        state: absent

    - name: Instalação dos pacotes pré requisitos
      apt:
        name: "{{ pkg_pre_requisitos }}"
        update_cache: yes
    
    - name: Instalação Docker
      block:
        - name: Instalando key repos Containerd
          shell: "curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/debian.gpg"
          args:
            creates: /etc/apt/trusted.gpg.d/debian.gpg
        
        - name: Instalando repos Containerd
          apt_repository:
            repo: deb [arch={{ansible_architecture}}] https://download.docker.com/linux/debian {{ansible_distribution_release}} stable            
            state: present

        - name: Instalação dos pacotes Docker
          apt:
            name: "{{ pkg_install_docker }}"      
            update_cache: yes

        - name: Habilitando Serviço do docker na inicialização
          service:
            name: docker
            state: started
            enabled: yes
    
    - name: Adicionando Usuário vagrant ao Grupo Docker
      user:
        name: vagrant
        shell: /bin/bash
        groups: docker

    - name: Subindo Jenkins
      docker_compose:
        project_src: /opt/    